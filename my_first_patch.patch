Index: pom.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- pom.xml	(date 1547828354000)
+++ pom.xml	(date 1547828354000)
@@ -0,0 +1,27 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<project xmlns="http://maven.apache.org/POM/4.0.0"
+         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
+         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
+    <modelVersion>4.0.0</modelVersion>
+
+    <groupId>com.epam.brest.cources</groupId>
+    <artifactId>DelivaryCost</artifactId>
+    <version>1.0-SNAPSHOT</version>
+
+    <properties>
+        <java.version>1.8</java.version>
+    </properties>
+
+    <build>
+        <plugins>
+            <plugin>
+                <artifactId>maven-compiler-plugin</artifactId>
+                <version>3.8.0</version>
+                    <configuration>
+                        <source>${java.version}</source>
+                        <target>${java.version}</target>
+                    </configuration>
+            </plugin>
+        </plugins>
+    </build>
+</project>
\ No newline at end of file
Index: src/main/resources/price.properties
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/main/resources/price.properties	(date 1547983177000)
+++ src/main/resources/price.properties	(date 1547983177000)
@@ -0,0 +1,3 @@
+weight = 12
+price = 33
+distance = 1
\ No newline at end of file
Index: src/main/java/com/epam/brest/cources/DelivaryCost.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/main/java/com/epam/brest/cources/DelivaryCost.java	(date 1547983703000)
+++ src/main/java/com/epam/brest/cources/DelivaryCost.java	(date 1547983703000)
@@ -0,0 +1,53 @@
+
+package com.epam.brest.cources;
+
+import java.io.*;
+import java.util.Properties;
+
+public class DelivaryCost {
+    public static void main(String[] args) throws IOException {
+
+            final Properties properties = new Properties();
+            BufferedReader reader = new BufferedReader(new InputStreamReader(System.in));
+            try{
+                FileInputStream fs = new FileInputStream("/home/evgen/EPAM_PROJECT/src/main/resources/price.properties");
+                properties.load(fs);
+
+                float distance = Float.parseFloat(properties.getProperty("distance"));
+                float weight = Float.parseFloat(properties.getProperty("weight"));
+                float price = Float.parseFloat(properties.getProperty("price"));
+
+
+                if(weight<=0){
+
+                }
+
+                System.out.println("distance = " + distance);
+                System.out.println("weight = " + weight);
+                System.out.println("price = " + price);
+
+            } catch (FileNotFoundException ex){
+                System.out.println("Файл не найден");
+            }
+
+
+    }
+
+//    private static Properties loadPropertiesFromFile(String fileName) throws IOException {
+//        Properties properties = new Properties();
+//        if (new File(fileName).exists()) {
+//            try (InputStream inputStream = new FileInputStream("/home/evgen/EPAM_PROJECT/src/main/resources/price.properties")) {
+//                properties.load(inputStream);
+//
+//                String weight = properties.getProperty("weight");
+//                String height = properties.getProperty("height");
+//
+//                System.out.println("weight" + weight);
+//                System.out.println("height = " + height);
+//            }
+//        }
+//        return properties;
+//    }
+}
+
+
